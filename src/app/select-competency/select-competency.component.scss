.competency-section {
  margin-bottom: var(--spacing-xl);

  h3 {
    margin-bottom: var(--spacing-md);
    // Using global text color if applicable, otherwise define a color
    color: var(--text-color);
  }
}

.competency-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); // Responsive columns
  gap: var(--spacing-md);
}

.competency-item {
  position: relative; // Needed for absolute positioning of description
  border: 1px solid #ccc;
  border-radius: var(--border-radius-md);
  padding: var(--spacing-md);
  text-align: center;
  cursor: pointer;
  overflow: hidden; // Hide description initially
  box-shadow: var(--box-shadow-sm);
  transition: box-shadow 0.3s ease;

  &:hover {
    box-shadow: var(--box-shadow-md);

    .competency-description {
      opacity: 1;
      visibility: visible;
    }
  }

  img {
    width: 100%;
    height: auto;
    border-radius: var(--border-radius-sm);
    margin-bottom: var(--spacing-sm);
  }

  p {
    margin: 0;
    font-size: 0.9rem;
    font-weight: var(--font-weight-medium);
    color: var(--text-color); // Using global text color
  }
}

.competency-description {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(255, 255, 255, 0.95); // Semi-transparent background
  display: flex;
  justify-content: center;
  align-items: center;
  padding: var(--spacing-md);
  text-align: center;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s ease, visibility 0.3s ease;
  pointer-events: none; // Allows clicking through the description when hidden

  p {
    font-size: 1rem;
    color: var(--text-color); // Using global text color
  }
}

// Responsive adjustments
@media (min-width: 768px) {
  .competency-grid {
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  }
}

@media (min-width: 1200px) {
  .competency-grid {
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  }
}
